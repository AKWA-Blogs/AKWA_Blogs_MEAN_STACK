{"version":3,"sources":["webpack:///./node_modules/jwt-decode/lib/atob.js","webpack:///./node_modules/jwt-decode/lib/base64_url_decode.js","webpack:///./node_modules/jwt-decode/lib/index.js","webpack:///./src/app/pages/lock/lock.component.html","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/pricing/pricing.component.html","webpack:///./src/app/pages/register/register.component.html","webpack:///./src/app/pages/lock/lock.component.ts","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/pages.module.ts","webpack:///./src/app/pages/pages.routing.ts","webpack:///./src/app/pages/pricing/pricing.component.ts","webpack:///./src/app/pages/register/register.component.ts"],"names":[],"mappings":"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","file":"pages-pages-module.js","sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n","var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n","'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n","module.exports = \"\\n\\n<div class=\\\"wrapper wrapper-full-page\\\">\\n  <div class=\\\"page-header lock-page header-filter\\\" style=\\\"background-image: url('./assets/img/lock.jpg'); background-size: cover; background-position: top center;\\\">\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | green | orange | red | purple\\\" -->\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 ml-auto mr-auto\\\">\\n          <div class=\\\"card card-profile text-center card-hidden\\\">\\n            <div class=\\\"card-header \\\">\\n              <div class=\\\"card-avatar\\\">\\n                <a href=\\\"#pablo\\\">\\n                  <img class=\\\"img\\\" src=\\\"./assets/img/faces/avatar.jpg\\\">\\n                </a>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body \\\">\\n              <h4 class=\\\"card-title\\\">Tania Andrew</h4>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Enter Password\\\" type=\\\"password\\\">\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"card-footer justify-content-center\\\">\\n              <a href=\\\"#pablo\\\" class=\\\"btn btn-rose btn-round\\\">Unlock</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <footer class=\\\"footer \\\">\\n    <div class=\\\"container\\\">\\n      <nav class=\\\"pull-left\\\">\\n        <ul>\\n          <li>\\n            <a href=\\\"https://www.creative-tim.com\\\">\\n              Creative Tim\\n            </a>\\n          </li>\\n          <li>\\n            <a href=\\\"https://creative-tim.com/about-us\\\">\\n              About Us\\n            </a>\\n          </li>\\n          <li>\\n            <a href=\\\"http://blog.creative-tim.com\\\">\\n              Blog\\n            </a>\\n          </li>\\n          <li>\\n            <a href=\\\"https://www.creative-tim.com/license\\\">\\n              Licenses\\n            </a>\\n          </li>\\n        </ul>\\n      </nav>\\n      <div class=\\\"copyright pull-right\\\">\\n        &copy;\\n          {{test | date: 'yyyy'}}, made with <i class=\\\"material-icons\\\">favorite</i> by\\n        <a href=\\\"https://www.creative-tim.com\\\" target=\\\"_blank\\\">Creative Tim</a> for a better web.\\n      </div>\\n    </div>\\n  </footer>\\n</div>\\n\"","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\n  <div class=\\\"page-header login-page header-filter\\\" filter-color=\\\"black\\\"\\n    style=\\\"background-image: url('./assets/img/login.jpg'); background-size: cover; background-position: top center;\\\">\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | purple | green | orange | red | rose \\\" -->\\n    \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto\\\">\\n          <div class=\\\"card\\\">\\n            <form (submit)= \\\"onSubmit()\\\">\\n              <div class=\\\"card-header card-header-rose card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                  <i class=\\\"material-icons\\\">contacts</i>\\n                </div>\\n                <h4 class=\\\"card-title\\\">Login</h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Email *\\\" [formControl]=\\\"emailFormControl\\\" [(ngModel)]=\\\"user.email\\\">\\n                  <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n                    Please enter a valid email address\\n                  </mat-error>\\n                  <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                    Email is <strong>required</strong>\\n                  </mat-error>\\n                </mat-form-field>\\n                <!-- {{emailFormControl.errors | json}} -->\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input type=\\\"password\\\" matInput placeholder=\\\"Password *\\\" [formControl]=\\\"passFormControl\\\" [(ngModel)]=\\\"user.password\\\">\\n                  <mat-error *ngIf=\\\"passFormControl.hasError('required')\\\">\\n                    Password is <strong>required</strong>\\n                  </mat-error>\\n                </mat-form-field>\\n                <div class=\\\"category form-category\\\">* Required fields</div>\\n              </div>\\n              <div class=\\\"card-footer text-right\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-rose btn-fill btn-wd\\\">Login</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\n  <div class=\\\"page-header pricing-page header-filter\\\" style=\\\"background-image: url('./assets/img/bg-pricing.jpg'); background-size: cover; background-position: top center;\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 ml-auto mr-auto text-center\\\">\\n          <h2 class=\\\"title\\\">Pick the best plan for you</h2>\\n          <h5 class=\\\"description\\\">You have Free Unlimited Updates and Premium Support on each package.</h5>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-6\\\">\\n          <div class=\\\"card card-pricing card-plain\\\">\\n            <h6 class=\\\"card-category\\\"> Freelancer</h6>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-icon icon-white \\\">\\n                <i class=\\\"material-icons\\\">weekend</i>\\n              </div>\\n              <h3 class=\\\"card-title\\\">Free</h3>\\n              <p class=\\\"card-description\\\">This is good if your company size is between 2 and 10 Persons.</p>\\n            </div>\\n            <div class=\\\"card-footer justify-content-center \\\">\\n              <a href=\\\"#pablo\\\" class=\\\"btn btn-round btn-white\\\">Choose Plan</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6\\\">\\n          <div class=\\\"card card-pricing \\\">\\n            <h6 class=\\\"card-category\\\"> Small Company</h6>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-icon icon-rose \\\">\\n                <i class=\\\"material-icons\\\">home</i>\\n              </div>\\n              <h3 class=\\\"card-title\\\">29$</h3>\\n              <p class=\\\"card-description\\\">This is good if your company size is between 2 and 10 Persons.</p>\\n            </div>\\n            <div class=\\\"card-footer justify-content-center \\\">\\n              <a href=\\\"#pablo\\\" class=\\\"btn btn-round btn-rose\\\">Choose Plan</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6\\\">\\n          <div class=\\\"card card-pricing card-plain\\\">\\n            <h6 class=\\\"card-category\\\"> Medium Company</h6>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-icon icon-white \\\">\\n                <i class=\\\"material-icons\\\">business</i>\\n              </div>\\n              <h3 class=\\\"card-title\\\">69$</h3>\\n              <p class=\\\"card-description\\\">This is good if your company size is between 11 and 99 Persons.</p>\\n            </div>\\n            <div class=\\\"card-footer justify-content-center \\\">\\n              <a href=\\\"#pablo\\\" class=\\\"btn btn-round btn-white\\\">Choose Plan</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6\\\">\\n          <div class=\\\"card card-pricing card-plain\\\">\\n            <h6 class=\\\"card-category\\\"> Extra Pack</h6>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-icon icon-white \\\">\\n                <i class=\\\"material-icons\\\">account_balance</i>\\n              </div>\\n              <h3 class=\\\"card-title\\\">159$</h3>\\n              <p class=\\\"card-description\\\">This is good if your company size is 99+ Persons.</p>\\n            </div>\\n            <div class=\\\"card-footer justify-content-center \\\">\\n              <a href=\\\"#pablo\\\" class=\\\"btn btn-round btn-white\\\">Choose Plan</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer \\\">\\n      <div class=\\\"container\\\">\\n        <nav class=\\\"pull-left\\\">\\n          <ul>\\n            <li>\\n              <a href=\\\"https://www.creative-tim.com\\\">\\n                Creative Tim\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"https://creative-tim.com/about-us\\\">\\n                About Us\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"http://blog.creative-tim.com\\\">\\n                Blog\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"https://www.creative-tim.com/license\\\">\\n                Licenses\\n              </a>\\n            </li>\\n          </ul>\\n        </nav>\\n        <div class=\\\"copyright pull-right\\\">\\n          &copy;\\n          {{test | date: 'yyyy'}}, made with <i class=\\\"material-icons\\\">favorite</i> by\\n          <a href=\\\"https://www.creative-tim.com\\\" target=\\\"_blank\\\">Creative Tim</a> for a better web.\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\n  <div class=\\\"page-header register-page header-filter\\\" filter-color=\\\"black\\\"\\n    style=\\\"background-image: url('./assets/img/register.jpg'); background-size: cover; background-position: top center;\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 ml-auto mr-auto\\\">\\n          <form (submit)=\\\"onSubmit()\\\">\\n            <div class=\\\"card card-signup\\\">\\n              <div class=\\\"card-header card-header-rose card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                  <i class=\\\"material-icons\\\">contacts</i>\\n                </div>\\n                <h4 class=\\\"card-title\\\">Register</h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                  <mat-form-field class=\\\"full-width\\\">\\n                      <input matInput placeholder=\\\"First Name\\\" [formControl]=\\\"fnameFormControl\\\" [(ngModel)]=\\\"newUser.first_name\\\">\\n                      <mat-error *ngIf=\\\"fnameFormControl.hasError('required')\\\">\\n                          First name is <strong>required</strong>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"fnameFormControl.errors\\\">\\n                          First name <strong>must be at least 3 characters long.</strong>\\n                      </mat-error>\\n                  </mat-form-field>\\n                  <!-- {{fnameFormControl.errors | json}} -->\\n                  <mat-form-field class=\\\"full-width\\\">\\n                      <input matInput placeholder=\\\"Last Name\\\" [formControl]=\\\"lnameFormControl\\\" [(ngModel)]=\\\"newUser.last_name\\\">\\n                      <mat-error *ngIf=\\\"lnameFormControl.hasError('required')\\\">\\n                          Last name is <strong>required</strong>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"lnameFormControl.errors\\\">\\n                          Last name <strong>must be at least 3 characters long.</strong>\\n                      </mat-error>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                      <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" [(ngModel)]=\\\"newUser.email\\\">\\n                      <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n                          Please enter a valid email address\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                          Email is <strong>required</strong>\\n                      </mat-error>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [formControl]=\\\"passFormControl\\\" [(ngModel)]=\\\"newUser.password\\\">\\n                      <mat-error *ngIf=\\\"passFormControl.hasError('required')\\\">\\n                          Password is <strong>required</strong>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"passFormControl.errors\\\">\\n                          Password <strong>must be at least 8 characters long.</strong>\\n                      </mat-error>\\n                  </mat-form-field>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                      <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" [formControl]=\\\"confirmFormControl\\\">\\n                      <mat-error *ngIf=\\\"confirmFormControl.hasError('required')\\\">\\n                          Confirm password is <strong>required</strong>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"confirmFormControl.errors\\\">\\n                          Password <strong>must be at least 8 characters long.</strong>\\n                      </mat-error>\\n                  </mat-form-field>\\n                <div class=\\\"category form-category\\\">* Required fields</div>\\n              </div>\\n              <div class=\\\"card-footer text-left\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-rose btn-fill btn-wd\\\">Register</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n    selector: 'app-lock-cmp',\n    templateUrl: './lock.component.html'\n})\n\nexport class LockComponent implements OnInit, OnDestroy {\n    test: Date = new Date();\n    ngOnInit() {\n      const body = document.getElementsByTagName('body')[0];\n      body.classList.add('lock-page');\n      body.classList.add('off-canvas-sidebar');\n      const card = document.getElementsByClassName('card')[0];\n        setTimeout(function() {\n            // after 1000 ms we add the class animated to the login/register card\n            card.classList.remove('card-hidden');\n        }, 700);\n    }\n    ngOnDestroy(){\n      const body = document.getElementsByTagName('body')[0];\n      body.classList.remove('lock-page');\n      body.classList.remove('off-canvas-sidebar');\n\n    }\n}\n","import { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\n\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormBuilder, AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { PasswordValidation } from './password-validator.component';\nimport { HttpService } from '../../http.service';\nimport * as jwt_decode from 'jwt-decode';\nimport { Router } from '@angular/router';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n}\n\ndeclare var $: any;\n\n@Component({\n    selector: 'app-login-cmp',\n    templateUrl: './login.component.html'\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n    test: Date = new Date();\n    private toggleButton: any;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    emailFormControl = new FormControl('', [\n        Validators.required,\n        Validators.email,\n    ]);\n    passFormControl = new FormControl('', [\n        Validators.required,\n    ]);\n\n    constructor(private element: ElementRef, private _httpService: HttpService, private router: Router) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n\n    ngOnInit() {\n        // if (localStorage.getItem('id') != null) {\n        //     this.router.navigate(['/'])\n        // }\n        var navbar: HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n        const body = document.getElementsByTagName('body')[0];\n        body.classList.add('login-page');\n        body.classList.add('off-canvas-sidebar');\n        const card = document.getElementsByClassName('card')[0];\n        setTimeout(function () {\n            // after 1000 ms we add the class animated to the login/register card\n            card.classList.remove('card-hidden');\n        }, 700);\n    }\n\n    user = { email: \"\", password: \"\" }\n\n    onSubmit() {\n        console.log('logging...')\n        let observable = this._httpService.postLogin(this.user)\n        observable.subscribe(data => {\n            console.log('done! ', data['token'])\n            var user = jwt_decode(data['token'])\n            localStorage.setItem('id', user.id)\n            console.log('setting \"id\" in local: ' + localStorage.getItem('id'))\n            this.router.navigate(['/'])\n        })\n    }\n\n    sidebarToggle() {\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if (this.sidebarVisible == false) {\n            setTimeout(function () {\n                toggleButton.classList.add('toggled');\n            }, 500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    ngOnDestroy() {\n        const body = document.getElementsByTagName('body')[0];\n        body.classList.remove('login-page');\n        body.classList.remove('off-canvas-sidebar');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../app.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { PagesRoutes } from './pages.routing';\n\nimport { RegisterComponent } from './register/register.component';\nimport { PricingComponent } from './pricing/pricing.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(PagesRoutes),\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    PricingComponent,\n    LockComponent,\n  ]\n})\n\nexport class PagesModule {}\n","import { Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { PricingComponent } from './pricing/pricing.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const PagesRoutes: Routes = [\n\n    {\n        path: '',\n        children: [ {\n            path: 'login',\n            component: LoginComponent\n        }, {\n            path: 'lock',\n            component: LockComponent\n        }, {\n            path: 'register',\n            component: RegisterComponent\n        }, {\n            path: 'pricing',\n            component: PricingComponent\n        }]\n    }\n];\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n\n@Component({\n    selector: 'app-pricing-cmp',\n    templateUrl: './pricing.component.html'\n})\n\nexport class PricingComponent implements OnInit, OnDestroy {\n    test: Date = new Date();\n    ngOnInit() {\n      const body = document.getElementsByTagName('body')[0];\n      body.classList.add('pricing-page');\n      body.classList.add('off-canvas-sidebar');\n    }\n    ngOnDestroy(){\n      const body = document.getElementsByTagName('body')[0];\n      body.classList.remove('pricing-page');\n      body.classList.remove('off-canvas-sidebar');\n    }\n}\n","import { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup } from '@angular/forms';\nimport { HttpService } from '../../http.service';\nimport * as jwt_decode from 'jwt-decode';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-cmp',\n  templateUrl: './register.component.html'\n})\n\nexport class RegisterComponent implements OnInit, OnDestroy {\n  test: Date = new Date();\n  private toggleButton: any;\n  private sidebarVisible: boolean;\n  private nativeElement: Node;\n\n  fnameFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3)\n  ]);\n  lnameFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3)\n  ]);\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  passFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8)\n  ]);\n  confirmFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8)\n  ]);\n\n  constructor(private element: ElementRef, private _httpService: HttpService, private router: Router) {\n    this.nativeElement = element.nativeElement;\n    this.sidebarVisible = false;\n  }\n\n  ngOnInit() {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('register-page');\n    body.classList.add('off-canvas-sidebar');\n  }\n  ngOnDestroy() {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.remove('register-page');\n    body.classList.remove('off-canvas-sidebar');\n  }\n\n  newUser = { first_name: \"\", last_name: \"\", email: \"\", password: \"\" }\n\n  onSubmit() {\n    console.log(\"registering...\")\n    let observable = this._httpService.postSignUp(this.newUser)\n    observable.subscribe(data => {\n      console.log('done! ', data['token'])\n      var user = jwt_decode(data['token'])\n      localStorage.setItem('id', user.id)\n      console.log('setting \"id\" in local: ' + localStorage.getItem('id'))\n      this.router.navigate(['/'])\n    })\n  }\n}\n"],"sourceRoot":""}
